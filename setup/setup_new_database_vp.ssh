#!/bin/bash

#CHANGE below to select where conda is initialised on your system
# source ~/.bash_profile
# source ~/.zshrc
source ~/.bashrc

cd ../Mgt/Mgt/Mgt/

SETTINGS="settings_vp"

export APPS_DATABASE_MAPPING="$(python -c "from $SETTINGS import APPS_DATABASE_MAPPING; print('|'.join(APPS_DATABASE_MAPPING))")"

IFS='|'

read -ra arr <<< "$APPS_DATABASE_MAPPING"

for val in "${arr[@]}"; do
    echo "$val"
    sed -i "/^INSTALLED_APPS/ s/\[/&\n\t'$val',/" settings_vp.py

    #CHANGE species name to be used for database, should match kraken result for contamination checking
    export db_name="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['db_name'])")"
    export appname="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['app_name'])")"
    export dbuser="$(python -c "from $SETTINGS import DB_USER; print(DB_USER)")"

    #CHANGE species name to be used for database, should match kraken result for contamination checking
    export species="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['species'])")"

    #CHANGE location for setup files to be stored for use later in the script
    export ref_files="$(python -c "from $SETTINGS import REF_FILES; print(REF_FILES)")"

    #CHANGE full path to modified settings file
    export settingfile="$(python -c "from $SETTINGS import SETTING_FILE; print(SETTING_FILE)")"

    #CHANGE full path to reference genome
    export ref_genome="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['ref_genome'])")"

    #CHANGE full path to lociLocationsInRef file
    export lociloc="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['lociloc'])")"

    #CHANGE full path to lociLocationsInRef file
    export scheme_accessions="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['scheme_accessions'])")"

    #CHANGE full path to top folder of MGT repo
    export path_mgt="$(python -c "from $SETTINGS import PATH_MGT; print(PATH_MGT)")"

    #CHANGE abbreviated settings file name
    export settings_prefix="$(python -c "from $SETTINGS import SETTINGS_PREFIX; print(SETTINGS_PREFIX)")"

    #CHANGE location to store single file of reference alleles
    export refalleles="$(python -c "from $SETTINGS import REFALLELES; print(REFALLELES)")"

    #CHANGE name of conda environment
    export condaenv="$(python -c "from $SETTINGS import CONDAENV; print(CONDAENV)")"

    #CHANGE number of levels in MGT scheme
    export schemeno="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['schemeno'])")"

    #CHANGE number and cutoff of ODCs generated from largest scheme
    export odcls="$(python -c "from $SETTINGS import SETUP_DB; print(SETUP_DB['$val']['odcls'])")"

    #CHANGE login details of initial user
    export superusername="$(python -c "from $SETTINGS import SUPERUSERNAME; print(SUPERUSERNAME)")"
    export superuseremail=""$(python -c "from $SETTINGS import SUPERUSEREMAIL; print(SUPERUSEREMAIL)")""

    ################################# EDIT ABOVE THIS LINE ONLY  ###############################################################

    echo "creating database"
    dropdb -U ${dbuser} ${db_name}
    createdb -U ${dbuser} ${db_name}
    psql -U ${dbuser} -d ${db_name} -c "grant all privileges on database ${db_name} to mlstwebsite"
    psql -U ${dbuser} -d ${db_name} -c "grant all privileges on database ${db_name} to ${dbuser}"
    sleep 2

    cd ${path_mgt}

    eval "$(conda shell.bash hook)"

    # . ../miniconda3/etc/profile.d/conda.sh

    conda activate ${condaenv};

    cd Mgt/Mgt

    mgt_home=$(pwd)'/'

    cp -r Blankdb ${appname}

    # Replace 'Blankdb' with '$appname' in apps.py
    sed -i "s/Blankdb/$appname/g" $appname/apps.py

    echo $appname/apps.py


    echo PAUSE


    cd $mgt_home"Scripts"

    python make_setup_files.py -r $ref_genome -a $appname -d $db_name -s "$species" -t $ref_files --allref $refalleles --allele_locations $lociloc --schemeno $schemeno --schemeaccessions $scheme_accessions --mgt1is7gene --odcls $odcls --settings $settingfile

    echo "made setup files"

    echo $(pwd)

    cd ../
    python manage.py makemigrations --settings $settings_prefix $appname
    python manage.py makemigrations --settings $settings_prefix --merge
    python manage.py migrate --settings $settings_prefix --database=$db_name

    echo "migrated"

    cd $mgt_home"Scripts";
    python populateReference.py ../ Mgt $appname $ref_files"refFileInfo.json" $settings_prefix
    echo "added ref"
    python populateLoci.py ../ Mgt $appname $ref_files"lociLocationsInRef.txt" $settings_prefix
    python populateSchemes.py ../ Mgt $appname $ref_files"schemesInfo.txt" $ref_files"Schemes" $settings_prefix
    sleep 2

    echo ccs
    python setUpCcs.py ../ Mgt $appname $ref_files"tables_ccs.txt" $settings_prefix >> ../$appname""/models/autoGenCcs.py
    sleep 2

    cd ../
    python manage.py makemigrations --settings $settings_prefix $appname
    python manage.py migrate --settings $settings_prefix --database=$db_name
    sleep 1
    cd $mgt_home"Scripts"

    echo aps
    python setUpApsAndMgt.py ../ Mgt $appname $ref_files"tables_aps.txt" $settings_prefix > ../$appname""/models/autoGenAps.py

    echo -e "from django.db import models\nfrom .defModels import *\nfrom .autoGenCcs import *\n\n\n$(cat ../$appname'/models/autoGenAps.py')" > ../$appname"/models/autoGenAps.py"
    sleep 4


    sed -i 's/#replace//g' ../$appname""/models/projModels.py
    cd ../
    python manage.py makemigrations --settings $settings_prefix $appname
    #read  -p "Press enter after fixing ap_N migration order problem" mainmenuinput
    python manage.py migrate --settings $settings_prefix --database=$db_name
    sleep 1
    cd $mgt_home"Scripts"

    ## ??? sed -i -e 's/#replace //g' ../$appname""/views/FuncsAuxAndDb/mgt9Aps.py

    echo alleles
    mkdir $mgt_home'Alleles/'
    # cd $mgt_home"Scripts"
    python addAlleles.py ../ Mgt $appname $ref_files"/"$appname"_alleles/" $settings_prefix;
    python addSnps.py ../ Mgt $appname $ref_files"/snpMuts.txt" $settings_prefix
    sleep 2

    echo mapping
    python addAllelicProfiles.py ../ Mgt $appname $ref_files"schemeToApMapping.txt" $ref_files"AllelicProfiles/" $settings_prefix
    sleep 2

    echo "add clonal complexes"
    # cd $mgt_home"Scripts";
    python addClonalComplexes.py ../ Mgt $appname  $ref_files"ccInfo.txt"  $ref_files"ClonalComplexes/" $settings_prefix
    sleep 2;


    #currently only Ref works FIX!!!!
    echo "add ref user"
    cd ..
    python manage.py createsuperuser --settings $settings_prefix --username $superusername --email $superuseremail

    sed -i "s/#replace//g" $mgt_home"/$appname/models/projModels.py"
    # python manage.py makemigrations --settings $settings_prefix $appname
    # python manage.py migrate --settings $settings_prefix --database=$db_name
    sleep 1

    cd $mgt_home"Scripts"


    echo "add reference and metadata info"
    python addIsolates.py ../ Mgt $appname $ref_files"isolate_info.tab" $settings_prefix
    python addMgts.py ../ Mgt $appname $ref_files"mgt_annotations.tab" $settings_prefix
    sleep 2

    echo "add view table"
    # cd $mgt_home"Scripts"
    python genViewSqlAndClass.py ../ Mgt $appname $dbuser $settings_prefix
    sleep 1
    head -5 $mgt_home"$appname/models/autoGenViews.py" > views_head
    sleep 1
    cat $mgt_home"Scripts/views_head" $mgt_home"Scripts/autoGenView" > autoGenViews.py;
    mv $mgt_home"Scripts/autoGenViews.py" $mgt_home"/$appname/models"

    sleep 1
    rm views_head
    psql -U blankuser -d ${db_name} -f ./runOnDb.sql


    cd ../
    python manage.py makemigrations --settings $settings_prefix $appname
    python manage.py migrate --settings $settings_prefix --database=$db_name
    sleep 1

    echo "finished"
    echo $(pwd)
    cd Mgt
    echo $(pwd)

done